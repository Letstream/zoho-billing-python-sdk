# coding: utf-8

"""
    Items

    A product is the item offered for sale. It can be a commodity. Based on the type of your business, you can offer one or more goods.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1000</span></td><td>The item name already exist</td></tr><tr><tr><td><span style=\"color:#FF0000;\"> 2006</span></td><td>Item does not exist</td></tr><td><span style=\"color:#FF0000;\"> 2049</span></td><td>Items which are a part of other transactions cannot be deleted. Instead, mark them as inactive</td></tr><tr><td><span style=\"color:#FF0000;\"> 2076</span></td><td>Product type cannot be changed for Items having transactions</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_items.api.items_api import ItemsApi


class TestItemsApi(unittest.TestCase):
    """ItemsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ItemsApi()

    def tearDown(self) -> None:
        pass

    def test_items_get(self) -> None:
        """Test case for items_get

        List items
        """
        pass

    def test_items_item_id_active_post(self) -> None:
        """Test case for items_item_id_active_post

        Mark as active
        """
        pass

    def test_items_item_id_delete(self) -> None:
        """Test case for items_item_id_delete

        Delete an item
        """
        pass

    def test_items_item_id_get(self) -> None:
        """Test case for items_item_id_get

        Retrieve an item
        """
        pass

    def test_items_item_id_inactive_post(self) -> None:
        """Test case for items_item_id_inactive_post

        Mark as inactive
        """
        pass

    def test_items_item_id_put(self) -> None:
        """Test case for items_item_id_put

        Update an item
        """
        pass

    def test_items_post(self) -> None:
        """Test case for items_post

        Create an Item
        """
        pass


if __name__ == '__main__':
    unittest.main()
