# coding: utf-8

"""
    Recurring Expenses

    Recurring expenses are those expenses that repeat itself after a fixed interval of time.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 4027</span></td><td>Please select a valid date range</td></tr><tr><td><span style=\"color:#FF0000;\"> 5012</span></td><td>Recurrence Name already exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 5015</span></td><td>Enter a valid expense amount</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_recurring_expenses.models.recurring_expense_response import RecurringExpenseResponse

class TestRecurringExpenseResponse(unittest.TestCase):
    """RecurringExpenseResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecurringExpenseResponse:
        """Test RecurringExpenseResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecurringExpenseResponse`
        """
        model = RecurringExpenseResponse()
        if include_optional:
            return RecurringExpenseResponse(
                account_id = '982000000561057',
                recurrence_name = 'Monthly Rental',
                start_date = '2016-11-19T00:00:00.000Z',
                end_date = ' ',
                is_pre_gst = False,
                source_of_supply = 'AP',
                destination_of_supply = 'TN',
                gst_no = '22AAAAA0000A1Z5',
                gst_treatment = 'business_gst',
                destination_of_supply_state = 'AP',
                hsn_or_sac = '80540',
                vat_treatment = 'eu_vat_not_registered',
                reverse_charge_tax_id = '982000000567254',
                reverse_charge_tax_name = 'inter',
                reverse_charge_tax_percentage = 10,
                reverse_charge_tax_amount = 10,
                is_reverse_charge_applied = False,
                acquisition_vat_total = 0,
                reverse_charge_vat_total = 10,
                acquisition_vat_summary = [
                    ls_zoho_billing_recurring_expenses.models.acquisition_vat_summary_inner.acquisition_vat_summary_inner(
                        tax_name = 'SalesTax', 
                        tax_amount = 11.85, )
                    ],
                reverse_charge_vat_summary = [
                    ls_zoho_billing_recurring_expenses.models.acquisition_vat_summary_inner.acquisition_vat_summary_inner(
                        tax_name = 'SalesTax', 
                        tax_amount = 11.85, )
                    ],
                recurrence_frequency = 'months',
                repeat_every = '1',
                amount = 112.5,
                total = 128.25,
                sub_total = 90,
                bcy_total = 100,
                product_type = 'goods',
                acquisition_vat_id = ' ',
                reverse_charge_vat_id = ' ',
                tax_id = '982000000566007',
                tax_name = 'SalesTax',
                tax_percentage = 10.5,
                created_time = '2013-11-18T02:17:40-0800',
                last_modified_time = '2013-12-18T02:17:40-0800',
                is_inclusive_tax = False,
                is_billable = True,
                customer_id = '982000000567001',
                currency_id = '982000000567001',
                exchange_rate = 1,
                project_id = ' ',
                project_name = ' ',
                custom_fields = [
                    ls_zoho_billing_recurring_expenses.models.custom_fields_inner.custom_fields_inner(
                        customfield_id = 46000000012845, 
                        value = 'Normal', )
                    ],
                line_item = ls_zoho_billing_recurring_expenses.models.recurring_expense_response_line_item.recurring_expense_response_line_item(
                    line_item_id = '10763000000140068', 
                    account_id = '982000000561057', 
                    account_name = 'Rent', 
                    description = ' ', 
                    tax_amount = 11.85, 
                    tax_id = '982000000566007', 
                    tax_name = 'SalesTax', 
                    tax_type = 'tax', 
                    tax_percentage = 10.5, 
                    item_total = '100', 
                    item_order = '1', 
                    hsn_or_sac = '80540', 
                    reverse_charge_tax_id = '982000000567254', 
                    reverse_charge_tax_name = 'inter', 
                    reverse_charge_tax_percentage = 10, 
                    reverse_charge_tax_amount = 10, )
            )
        else:
            return RecurringExpenseResponse(
        )
        """

    def testRecurringExpenseResponse(self):
        """Test RecurringExpenseResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
