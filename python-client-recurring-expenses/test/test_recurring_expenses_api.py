# coding: utf-8

"""
    Recurring Expenses

    Recurring expenses are those expenses that repeat itself after a fixed interval of time.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 4027</span></td><td>Please select a valid date range</td></tr><tr><td><span style=\"color:#FF0000;\"> 5012</span></td><td>Recurrence Name already exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 5015</span></td><td>Enter a valid expense amount</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_recurring_expenses.api.recurring_expenses_api import RecurringExpensesApi


class TestRecurringExpensesApi(unittest.TestCase):
    """RecurringExpensesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RecurringExpensesApi()

    def tearDown(self) -> None:
        pass

    def test_recurringexpenses_get(self) -> None:
        """Test case for recurringexpenses_get

        List recurring expenses
        """
        pass

    def test_recurringexpenses_post(self) -> None:
        """Test case for recurringexpenses_post

        Create a recurring expense
        """
        pass

    def test_recurringexpenses_recurring_expense_id_comments_get(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_comments_get

        List recurring expense history
        """
        pass

    def test_recurringexpenses_recurring_expense_id_delete(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_delete

        Delete a recurring expense
        """
        pass

    def test_recurringexpenses_recurring_expense_id_expenses_get(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_expenses_get

        List child expenses created
        """
        pass

    def test_recurringexpenses_recurring_expense_id_get(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_get

        Retrieve a recurring expense
        """
        pass

    def test_recurringexpenses_recurring_expense_id_post(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_post

        Update a recurring expense
        """
        pass

    def test_recurringexpenses_recurring_expense_id_status_resume_post(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_status_resume_post

        Resume a recurring Expense
        """
        pass

    def test_recurringexpenses_recurring_expense_id_status_stop_post(self) -> None:
        """Test case for recurringexpenses_recurring_expense_id_status_stop_post

        Stop a recurring expense
        """
        pass


if __name__ == '__main__':
    unittest.main()
