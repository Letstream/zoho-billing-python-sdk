# coding: utf-8

"""
    Recurring Expenses

    Recurring expenses are those expenses that repeat itself after a fixed interval of time.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 4027</span></td><td>Please select a valid date range</td></tr><tr><td><span style=\"color:#FF0000;\"> 5012</span></td><td>Recurrence Name already exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 5015</span></td><td>Enter a valid expense amount</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_recurring_expenses.models.list_recurring_expenses_response_recurring_expenses_inner import ListRecurringExpensesResponseRecurringExpensesInner

class TestListRecurringExpensesResponseRecurringExpensesInner(unittest.TestCase):
    """ListRecurringExpensesResponseRecurringExpensesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRecurringExpensesResponseRecurringExpensesInner:
        """Test ListRecurringExpensesResponseRecurringExpensesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRecurringExpensesResponseRecurringExpensesInner`
        """
        model = ListRecurringExpensesResponseRecurringExpensesInner()
        if include_optional:
            return ListRecurringExpensesResponseRecurringExpensesInner(
                recurring_expense_id = '982000000567240',
                recurrence_name = 'Monthly Rental',
                recurrence_frequency = 'months',
                repeat_every = '1',
                last_created_date = '2013-11-18T00:00:00.000Z',
                next_expense_date = '2013-12-18T00:00:00.000Z',
                account_name = 'Rent',
                description = ' ',
                currency_id = '982000000567001',
                currency_code = 'USD',
                total = 128.25,
                is_billable = True,
                customer_name = 'Bowman & Co',
                status = 'active',
                custom_fields = [
                    ls_zoho_billing_recurring_expenses.models.custom_fields_inner.custom_fields_inner(
                        customfield_id = 46000000012845, 
                        value = 'Normal', )
                    ],
                created_time = '2013-11-18T02:17:40-0800',
                last_modified_time = '2013-12-18T02:17:40-0800'
            )
        else:
            return ListRecurringExpensesResponseRecurringExpensesInner(
        )
        """

    def testListRecurringExpensesResponseRecurringExpensesInner(self):
        """Test ListRecurringExpensesResponseRecurringExpensesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
