# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr
from typing import List, Optional
from typing_extensions import Annotated
from ls_zoho_billing_invoices.models.add_attachment_to_an_invoice_request import AddAttachmentToAnInvoiceRequest
from ls_zoho_billing_invoices.models.add_attachment_to_an_invoice_response import AddAttachmentToAnInvoiceResponse
from ls_zoho_billing_invoices.models.add_items_to_a_pending_invoice_request import AddItemsToAPendingInvoiceRequest
from ls_zoho_billing_invoices.models.add_items_to_a_pending_invoice_response import AddItemsToAPendingInvoiceResponse
from ls_zoho_billing_invoices.models.apply_multiple_credits_to_invoice_request import ApplyMultipleCreditsToInvoiceRequest
from ls_zoho_billing_invoices.models.apply_multiple_credits_to_invoice_response import ApplyMultipleCreditsToInvoiceResponse
from ls_zoho_billing_invoices.models.cancel_write_off_response import CancelWriteOffResponse
from ls_zoho_billing_invoices.models.collect_charge_via_bank_account_credit_card_request import CollectChargeViaBankAccountCreditCardRequest
from ls_zoho_billing_invoices.models.collect_charge_via_bank_account_credit_card_response import CollectChargeViaBankAccountCreditCardResponse
from ls_zoho_billing_invoices.models.convert_to_open_response import ConvertToOpenResponse
from ls_zoho_billing_invoices.models.create_an_invoice_request import CreateAnInvoiceRequest
from ls_zoho_billing_invoices.models.create_an_invoice_response import CreateAnInvoiceResponse
from ls_zoho_billing_invoices.models.custom_fields_update_inner import CustomFieldsUpdateInner
from ls_zoho_billing_invoices.models.delete_an_invoice_response import DeleteAnInvoiceResponse
from ls_zoho_billing_invoices.models.delete_items_from_a_pending_invoice_response import DeleteItemsFromAPendingInvoiceResponse
from ls_zoho_billing_invoices.models.email_an_invoice_request import EmailAnInvoiceRequest
from ls_zoho_billing_invoices.models.email_an_invoice_response import EmailAnInvoiceResponse
from ls_zoho_billing_invoices.models.list_all_invoices_response import ListAllInvoicesResponse
from ls_zoho_billing_invoices.models.retrieve_an_invoice_response import RetrieveAnInvoiceResponse
from ls_zoho_billing_invoices.models.update_address_request import UpdateAddressRequest
from ls_zoho_billing_invoices.models.update_address_response import UpdateAddressResponse
from ls_zoho_billing_invoices.models.update_an_invoice_customfield_response import UpdateAnInvoiceCustomfieldResponse
from ls_zoho_billing_invoices.models.update_an_invoice_request import UpdateAnInvoiceRequest
from ls_zoho_billing_invoices.models.update_an_invoice_response import UpdateAnInvoiceResponse
from ls_zoho_billing_invoices.models.update_custom_fields_request import UpdateCustomFieldsRequest
from ls_zoho_billing_invoices.models.update_custom_fields_response import UpdateCustomFieldsResponse
from ls_zoho_billing_invoices.models.void_an_invoice_response import VoidAnInvoiceResponse
from ls_zoho_billing_invoices.models.write_off_request import WriteOffRequest
from ls_zoho_billing_invoices.models.write_off_response import WriteOffResponse

from ls_zoho_billing_invoices.api_client import ApiClient, RequestSerialized
from ls_zoho_billing_invoices.api_response import ApiResponse
from ls_zoho_billing_invoices.rest import RESTResponseType


class InvoicesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def invoice_invoice_id_customfields_put(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        custom_fields_update_inner: Optional[List[CustomFieldsUpdateInner]] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UpdateAnInvoiceCustomfieldResponse:
        """Update custom field in existing invoices

        Update the value of the custom field in existing invoices.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param custom_fields_update_inner:
        :type custom_fields_update_inner: List[CustomFieldsUpdateInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoice_invoice_id_customfields_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            custom_fields_update_inner=custom_fields_update_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceCustomfieldResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoice_invoice_id_customfields_put_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        custom_fields_update_inner: Optional[List[CustomFieldsUpdateInner]] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UpdateAnInvoiceCustomfieldResponse]:
        """Update custom field in existing invoices

        Update the value of the custom field in existing invoices.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param custom_fields_update_inner:
        :type custom_fields_update_inner: List[CustomFieldsUpdateInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoice_invoice_id_customfields_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            custom_fields_update_inner=custom_fields_update_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceCustomfieldResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoice_invoice_id_customfields_put_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        custom_fields_update_inner: Optional[List[CustomFieldsUpdateInner]] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update custom field in existing invoices

        Update the value of the custom field in existing invoices.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param custom_fields_update_inner:
        :type custom_fields_update_inner: List[CustomFieldsUpdateInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoice_invoice_id_customfields_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            custom_fields_update_inner=custom_fields_update_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceCustomfieldResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoice_invoice_id_customfields_put_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        custom_fields_update_inner,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'CustomFieldsUpdateInner': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if custom_fields_update_inner is not None:
            _body_params = custom_fields_update_inner


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/invoice/{invoice_id}/customfields',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_get(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        filter_by: Annotated[Optional[StrictStr], Field(description="Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ListAllInvoicesResponse:
        """List all invoices

        List of all invoices. <br><br> To list invoices for a particular subscription or customer append a param as <code>subscription_id={subscription_id}</code> or <code>customer_id={customer_id}</code>.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param filter_by: Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).
        :type filter_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_get_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            filter_by=filter_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListAllInvoicesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_get_with_http_info(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        filter_by: Annotated[Optional[StrictStr], Field(description="Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ListAllInvoicesResponse]:
        """List all invoices

        List of all invoices. <br><br> To list invoices for a particular subscription or customer append a param as <code>subscription_id={subscription_id}</code> or <code>customer_id={customer_id}</code>.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param filter_by: Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).
        :type filter_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_get_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            filter_by=filter_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListAllInvoicesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_get_without_preload_content(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        filter_by: Annotated[Optional[StrictStr], Field(description="Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List all invoices

        List of all invoices. <br><br> To list invoices for a particular subscription or customer append a param as <code>subscription_id={subscription_id}</code> or <code>customer_id={customer_id}</code>.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param filter_by: Invoices of particular status can be filtered by passing a param <code>filter_by</code>. Allowed values are Status.(<code>All</code>, <code>Sent</code>, <code>Draft</code>, <code>OverDue</code>, <code>Paid</code>, <code>PartiallyPaid</code>, <code>Void</code>, <code>Unpaid</code>).
        :type filter_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_get_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            filter_by=filter_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListAllInvoicesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_get_serialize(
        self,
        x_com_zoho_subscriptions_organizationid,
        filter_by,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if filter_by is not None:
            
            _query_params.append(('filter_by', filter_by))
            
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/invoices',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_address_put(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_address_request: Optional[UpdateAddressRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UpdateAddressResponse:
        """Update address

        Update shipping and billing address of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_address_request:
        :type update_address_request: UpdateAddressRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_address_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_address_request=update_address_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAddressResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_address_put_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_address_request: Optional[UpdateAddressRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UpdateAddressResponse]:
        """Update address

        Update shipping and billing address of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_address_request:
        :type update_address_request: UpdateAddressRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_address_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_address_request=update_address_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAddressResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_address_put_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_address_request: Optional[UpdateAddressRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update address

        Update shipping and billing address of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_address_request:
        :type update_address_request: UpdateAddressRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_address_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_address_request=update_address_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAddressResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_address_put_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        update_address_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if update_address_request is not None:
            _body_params = update_address_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/invoices/{invoice_id}/address',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_attachment_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_attachment_to_an_invoice_request: Optional[AddAttachmentToAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AddAttachmentToAnInvoiceResponse:
        """Add attachment to an invoice

        Attach a file to an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_attachment_to_an_invoice_request:
        :type add_attachment_to_an_invoice_request: AddAttachmentToAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_attachment_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_attachment_to_an_invoice_request=add_attachment_to_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddAttachmentToAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_attachment_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_attachment_to_an_invoice_request: Optional[AddAttachmentToAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AddAttachmentToAnInvoiceResponse]:
        """Add attachment to an invoice

        Attach a file to an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_attachment_to_an_invoice_request:
        :type add_attachment_to_an_invoice_request: AddAttachmentToAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_attachment_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_attachment_to_an_invoice_request=add_attachment_to_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddAttachmentToAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_attachment_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_attachment_to_an_invoice_request: Optional[AddAttachmentToAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Add attachment to an invoice

        Attach a file to an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_attachment_to_an_invoice_request:
        :type add_attachment_to_an_invoice_request: AddAttachmentToAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_attachment_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_attachment_to_an_invoice_request=add_attachment_to_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddAttachmentToAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_attachment_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        add_attachment_to_an_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if add_attachment_to_an_invoice_request is not None:
            _body_params = add_attachment_to_an_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/attachment',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_cancelwriteoff_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CancelWriteOffResponse:
        """Cancel write off

        Cancel the write off amount of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_cancelwriteoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CancelWriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_cancelwriteoff_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CancelWriteOffResponse]:
        """Cancel write off

        Cancel the write off amount of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_cancelwriteoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CancelWriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_cancelwriteoff_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Cancel write off

        Cancel the write off amount of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_cancelwriteoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CancelWriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_cancelwriteoff_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/cancelwriteoff',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_collect_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        collect_charge_via_bank_account_credit_card_request: Optional[CollectChargeViaBankAccountCreditCardRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CollectChargeViaBankAccountCreditCardResponse:
        """Collect charge via bank account / credit card

        Charge a customer for an invoice using existing bank account.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param collect_charge_via_bank_account_credit_card_request:
        :type collect_charge_via_bank_account_credit_card_request: CollectChargeViaBankAccountCreditCardRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_collect_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            collect_charge_via_bank_account_credit_card_request=collect_charge_via_bank_account_credit_card_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectChargeViaBankAccountCreditCardResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_collect_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        collect_charge_via_bank_account_credit_card_request: Optional[CollectChargeViaBankAccountCreditCardRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CollectChargeViaBankAccountCreditCardResponse]:
        """Collect charge via bank account / credit card

        Charge a customer for an invoice using existing bank account.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param collect_charge_via_bank_account_credit_card_request:
        :type collect_charge_via_bank_account_credit_card_request: CollectChargeViaBankAccountCreditCardRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_collect_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            collect_charge_via_bank_account_credit_card_request=collect_charge_via_bank_account_credit_card_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectChargeViaBankAccountCreditCardResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_collect_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        collect_charge_via_bank_account_credit_card_request: Optional[CollectChargeViaBankAccountCreditCardRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Collect charge via bank account / credit card

        Charge a customer for an invoice using existing bank account.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param collect_charge_via_bank_account_credit_card_request:
        :type collect_charge_via_bank_account_credit_card_request: CollectChargeViaBankAccountCreditCardRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_collect_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            collect_charge_via_bank_account_credit_card_request=collect_charge_via_bank_account_credit_card_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectChargeViaBankAccountCreditCardResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_collect_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        collect_charge_via_bank_account_credit_card_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if collect_charge_via_bank_account_credit_card_request is not None:
            _body_params = collect_charge_via_bank_account_credit_card_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/collect',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_converttoopen_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ConvertToOpenResponse:
        """Convert to open

        Change the status of the invoice to open.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_converttoopen_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ConvertToOpenResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_converttoopen_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ConvertToOpenResponse]:
        """Convert to open

        Change the status of the invoice to open.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_converttoopen_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ConvertToOpenResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_converttoopen_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Convert to open

        Change the status of the invoice to open.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_converttoopen_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ConvertToOpenResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_converttoopen_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/converttoopen',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_credits_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        apply_multiple_credits_to_invoice_request: Optional[ApplyMultipleCreditsToInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplyMultipleCreditsToInvoiceResponse:
        """Apply Multiple Credits to Invoice

        To associate multiple creditnotes to a particular invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param apply_multiple_credits_to_invoice_request:
        :type apply_multiple_credits_to_invoice_request: ApplyMultipleCreditsToInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_credits_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            apply_multiple_credits_to_invoice_request=apply_multiple_credits_to_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplyMultipleCreditsToInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_credits_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        apply_multiple_credits_to_invoice_request: Optional[ApplyMultipleCreditsToInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplyMultipleCreditsToInvoiceResponse]:
        """Apply Multiple Credits to Invoice

        To associate multiple creditnotes to a particular invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param apply_multiple_credits_to_invoice_request:
        :type apply_multiple_credits_to_invoice_request: ApplyMultipleCreditsToInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_credits_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            apply_multiple_credits_to_invoice_request=apply_multiple_credits_to_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplyMultipleCreditsToInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_credits_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        apply_multiple_credits_to_invoice_request: Optional[ApplyMultipleCreditsToInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Apply Multiple Credits to Invoice

        To associate multiple creditnotes to a particular invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param apply_multiple_credits_to_invoice_request:
        :type apply_multiple_credits_to_invoice_request: ApplyMultipleCreditsToInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_credits_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            apply_multiple_credits_to_invoice_request=apply_multiple_credits_to_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplyMultipleCreditsToInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_credits_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        apply_multiple_credits_to_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if apply_multiple_credits_to_invoice_request is not None:
            _body_params = apply_multiple_credits_to_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/credits',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_customfields_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_custom_fields_request: Optional[UpdateCustomFieldsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UpdateCustomFieldsResponse:
        """Update Custom Fields

        Update the custom fields of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_custom_fields_request:
        :type update_custom_fields_request: UpdateCustomFieldsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_customfields_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_custom_fields_request=update_custom_fields_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateCustomFieldsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_customfields_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_custom_fields_request: Optional[UpdateCustomFieldsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UpdateCustomFieldsResponse]:
        """Update Custom Fields

        Update the custom fields of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_custom_fields_request:
        :type update_custom_fields_request: UpdateCustomFieldsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_customfields_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_custom_fields_request=update_custom_fields_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateCustomFieldsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_customfields_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        update_custom_fields_request: Optional[UpdateCustomFieldsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update Custom Fields

        Update the custom fields of an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param update_custom_fields_request:
        :type update_custom_fields_request: UpdateCustomFieldsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_customfields_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            update_custom_fields_request=update_custom_fields_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateCustomFieldsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_customfields_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        update_custom_fields_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if update_custom_fields_request is not None:
            _body_params = update_custom_fields_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/customfields',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_delete(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DeleteAnInvoiceResponse:
        """Delete an invoice

        Delete an existing invoice. Invoices which have payment or credits note applied cannot be deleted.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_delete_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DeleteAnInvoiceResponse]:
        """Delete an invoice

        Delete an existing invoice. Invoices which have payment or credits note applied cannot be deleted.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_delete_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete an invoice

        Delete an existing invoice. Invoices which have payment or credits note applied cannot be deleted.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_delete_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/invoices/{invoice_id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_email_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        email_an_invoice_request: Optional[EmailAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmailAnInvoiceResponse:
        """Email an invoice

        Email an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param email_an_invoice_request:
        :type email_an_invoice_request: EmailAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_email_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            email_an_invoice_request=email_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmailAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_email_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        email_an_invoice_request: Optional[EmailAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmailAnInvoiceResponse]:
        """Email an invoice

        Email an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param email_an_invoice_request:
        :type email_an_invoice_request: EmailAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_email_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            email_an_invoice_request=email_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmailAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_email_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        email_an_invoice_request: Optional[EmailAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Email an invoice

        Email an invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param email_an_invoice_request:
        :type email_an_invoice_request: EmailAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_email_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            email_an_invoice_request=email_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmailAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_email_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        email_an_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if email_an_invoice_request is not None:
            _body_params = email_an_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/email',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_get(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RetrieveAnInvoiceResponse:
        """Retrieve an invoice

        Details of an existing invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_get_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RetrieveAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_get_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RetrieveAnInvoiceResponse]:
        """Retrieve an invoice

        Details of an existing invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_get_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RetrieveAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_get_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve an invoice

        Details of an existing invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_get_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RetrieveAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_get_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/invoices/{invoice_id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_lineitems_item_id_delete(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        item_id: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DeleteItemsFromAPendingInvoiceResponse:
        """Delete items from a pending invoice

        Deleting an item from pending invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param item_id: (required)
        :type item_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_item_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            item_id=item_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteItemsFromAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_lineitems_item_id_delete_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        item_id: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DeleteItemsFromAPendingInvoiceResponse]:
        """Delete items from a pending invoice

        Deleting an item from pending invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param item_id: (required)
        :type item_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_item_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            item_id=item_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteItemsFromAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_lineitems_item_id_delete_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        item_id: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete items from a pending invoice

        Deleting an item from pending invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param item_id: (required)
        :type item_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_item_id_delete_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            item_id=item_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DeleteItemsFromAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_lineitems_item_id_delete_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        item_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        if item_id is not None:
            _path_params['item_id'] = item_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/invoices/{invoice_id}/lineitems/{item_id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_lineitems_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_items_to_a_pending_invoice_request: Optional[AddItemsToAPendingInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AddItemsToAPendingInvoiceResponse:
        """Add items to a pending invoice

        Editing a pending invoice to add usage charges.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_items_to_a_pending_invoice_request:
        :type add_items_to_a_pending_invoice_request: AddItemsToAPendingInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_items_to_a_pending_invoice_request=add_items_to_a_pending_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddItemsToAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_lineitems_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_items_to_a_pending_invoice_request: Optional[AddItemsToAPendingInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AddItemsToAPendingInvoiceResponse]:
        """Add items to a pending invoice

        Editing a pending invoice to add usage charges.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_items_to_a_pending_invoice_request:
        :type add_items_to_a_pending_invoice_request: AddItemsToAPendingInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_items_to_a_pending_invoice_request=add_items_to_a_pending_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddItemsToAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_lineitems_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        add_items_to_a_pending_invoice_request: Optional[AddItemsToAPendingInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Add items to a pending invoice

        Editing a pending invoice to add usage charges.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param add_items_to_a_pending_invoice_request:
        :type add_items_to_a_pending_invoice_request: AddItemsToAPendingInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_lineitems_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            add_items_to_a_pending_invoice_request=add_items_to_a_pending_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AddItemsToAPendingInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_lineitems_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        add_items_to_a_pending_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if add_items_to_a_pending_invoice_request is not None:
            _body_params = add_items_to_a_pending_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/lineitems',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_put(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        update_an_invoice_request: Optional[UpdateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UpdateAnInvoiceResponse:
        """Update an invoice

        Update an existing invoice. To delete a line item just remove it from the invoice_items list.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param update_an_invoice_request:
        :type update_an_invoice_request: UpdateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            ignore_auto_number_generation=ignore_auto_number_generation,
            update_an_invoice_request=update_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_put_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        update_an_invoice_request: Optional[UpdateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UpdateAnInvoiceResponse]:
        """Update an invoice

        Update an existing invoice. To delete a line item just remove it from the invoice_items list.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param update_an_invoice_request:
        :type update_an_invoice_request: UpdateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            ignore_auto_number_generation=ignore_auto_number_generation,
            update_an_invoice_request=update_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_put_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        update_an_invoice_request: Optional[UpdateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update an invoice

        Update an existing invoice. To delete a line item just remove it from the invoice_items list.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param update_an_invoice_request:
        :type update_an_invoice_request: UpdateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_put_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            ignore_auto_number_generation=ignore_auto_number_generation,
            update_an_invoice_request=update_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_put_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        ignore_auto_number_generation,
        update_an_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        if ignore_auto_number_generation is not None:
            
            _query_params.append(('ignore_auto_number_generation', ignore_auto_number_generation))
            
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if update_an_invoice_request is not None:
            _body_params = update_an_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/invoices/{invoice_id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_void_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VoidAnInvoiceResponse:
        """Void an invoice

        Mark an invoice status as void. Upon voiding, the payments and credits associated with the invoices will be unassociated and will be under customer credits.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_void_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VoidAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_void_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VoidAnInvoiceResponse]:
        """Void an invoice

        Mark an invoice status as void. Upon voiding, the payments and credits associated with the invoices will be unassociated and will be under customer credits.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_void_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VoidAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_void_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Void an invoice

        Mark an invoice status as void. Upon voiding, the payments and credits associated with the invoices will be unassociated and will be under customer credits.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_void_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VoidAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_void_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/void',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_invoice_id_writeoff_post(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        write_off_request: Optional[WriteOffRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> WriteOffResponse:
        """Write off

        Write off a invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param write_off_request:
        :type write_off_request: WriteOffRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_writeoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            write_off_request=write_off_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_invoice_id_writeoff_post_with_http_info(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        write_off_request: Optional[WriteOffRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[WriteOffResponse]:
        """Write off

        Write off a invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param write_off_request:
        :type write_off_request: WriteOffRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_writeoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            write_off_request=write_off_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_invoice_id_writeoff_post_without_preload_content(
        self,
        invoice_id: StrictStr,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        write_off_request: Optional[WriteOffRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Write off

        Write off a invoice.

        :param invoice_id: (required)
        :type invoice_id: str
        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param write_off_request:
        :type write_off_request: WriteOffRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_invoice_id_writeoff_post_serialize(
            invoice_id=invoice_id,
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            write_off_request=write_off_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WriteOffResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_invoice_id_writeoff_post_serialize(
        self,
        invoice_id,
        x_com_zoho_subscriptions_organizationid,
        write_off_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoice_id'] = invoice_id
        # process the query parameters
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if write_off_request is not None:
            _body_params = write_off_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices/{invoice_id}/writeoff',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def invoices_post(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        send: Annotated[Optional[StrictBool], Field(description="Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.")] = None,
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        create_an_invoice_request: Optional[CreateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CreateAnInvoiceResponse:
        """Create an invoice

        Create an invoice for your customer.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param send: Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.
        :type send: bool
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param create_an_invoice_request:
        :type create_an_invoice_request: CreateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_post_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            send=send,
            ignore_auto_number_generation=ignore_auto_number_generation,
            create_an_invoice_request=create_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "CreateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def invoices_post_with_http_info(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        send: Annotated[Optional[StrictBool], Field(description="Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.")] = None,
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        create_an_invoice_request: Optional[CreateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CreateAnInvoiceResponse]:
        """Create an invoice

        Create an invoice for your customer.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param send: Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.
        :type send: bool
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param create_an_invoice_request:
        :type create_an_invoice_request: CreateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_post_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            send=send,
            ignore_auto_number_generation=ignore_auto_number_generation,
            create_an_invoice_request=create_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "CreateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def invoices_post_without_preload_content(
        self,
        x_com_zoho_subscriptions_organizationid: Annotated[StrictStr, Field(description="ID of the organization")],
        send: Annotated[Optional[StrictBool], Field(description="Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.")] = None,
        ignore_auto_number_generation: Annotated[Optional[StrictBool], Field(description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>")] = None,
        create_an_invoice_request: Optional[CreateAnInvoiceRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create an invoice

        Create an invoice for your customer.

        :param x_com_zoho_subscriptions_organizationid: ID of the organization (required)
        :type x_com_zoho_subscriptions_organizationid: str
        :param send: Send the invoice to the contact person(s) associated with the invoice. Allowed values <code>true</code> and <code>false</code>.
        :type send: bool
        :param ignore_auto_number_generation: Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values <code>true</code> and <code>false</code>
        :type ignore_auto_number_generation: bool
        :param create_an_invoice_request:
        :type create_an_invoice_request: CreateAnInvoiceRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._invoices_post_serialize(
            x_com_zoho_subscriptions_organizationid=x_com_zoho_subscriptions_organizationid,
            send=send,
            ignore_auto_number_generation=ignore_auto_number_generation,
            create_an_invoice_request=create_an_invoice_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "CreateAnInvoiceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _invoices_post_serialize(
        self,
        x_com_zoho_subscriptions_organizationid,
        send,
        ignore_auto_number_generation,
        create_an_invoice_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if send is not None:
            
            _query_params.append(('send', send))
            
        if ignore_auto_number_generation is not None:
            
            _query_params.append(('ignore_auto_number_generation', ignore_auto_number_generation))
            
        # process the header parameters
        if x_com_zoho_subscriptions_organizationid is not None:
            _header_params['X-com-zoho-subscriptions-organizationid'] = x_com_zoho_subscriptions_organizationid
        # process the form parameters
        # process the body parameter
        if create_an_invoice_request is not None:
            _body_params = create_an_invoice_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Zoho_Auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/invoices',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


