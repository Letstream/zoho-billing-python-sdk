# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.apply_credits_request import ApplyCreditsRequest

class TestApplyCreditsRequest(unittest.TestCase):
    """ApplyCreditsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplyCreditsRequest:
        """Test ApplyCreditsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplyCreditsRequest`
        """
        model = ApplyCreditsRequest()
        if include_optional:
            return ApplyCreditsRequest(
                invoice_payments = [
                    ls_zoho_billing_invoices.models.apply_credits_request_invoice_payments_inner.apply_credits_request_invoice_payments_inner(
                        payment_id = '460000000031003', 
                        amount_applied = 15, )
                    ],
                apply_creditnotes = [
                    ls_zoho_billing_invoices.models.apply_credits_request_apply_creditnotes_inner.apply_credits_request_apply_creditnotes_inner(
                        creditnote_id = '460000000029003', 
                        amount_applied = 22.5, )
                    ]
            )
        else:
            return ApplyCreditsRequest(
        )
        """

    def testApplyCreditsRequest(self):
        """Test ApplyCreditsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
