# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.update_address_response import UpdateAddressResponse

class TestUpdateAddressResponse(unittest.TestCase):
    """UpdateAddressResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateAddressResponse:
        """Test UpdateAddressResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateAddressResponse`
        """
        model = UpdateAddressResponse()
        if include_optional:
            return UpdateAddressResponse(
                code = 0,
                message = 'Invoice address updated',
                invoice_address = ls_zoho_billing_invoices.models.update_address_response_invoice_address.update_address_response_invoice_address(
                    billing_address = ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_billing_address.retrieve_an_invoice_response_invoice_billing_address(
                        city = 'Salt Lake City', 
                        state = 'CA', 
                        zip = '92612', 
                        country = 'U.S.A', 
                        fax = '4527389', ), 
                    shipping_address = ls_zoho_billing_invoices.models.shipping_address.shipping_address(
                        street = 'Harrington Bay Street', ), )
            )
        else:
            return UpdateAddressResponse(
        )
        """

    def testUpdateAddressResponse(self):
        """Test UpdateAddressResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
