# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.get_payment_reminder_mail_content_response import GetPaymentReminderMailContentResponse

class TestGetPaymentReminderMailContentResponse(unittest.TestCase):
    """GetPaymentReminderMailContentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPaymentReminderMailContentResponse:
        """Test GetPaymentReminderMailContentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPaymentReminderMailContentResponse`
        """
        model = GetPaymentReminderMailContentResponse()
        if include_optional:
            return GetPaymentReminderMailContentResponse(
                code = 0,
                message = 'success',
                data = ls_zoho_billing_invoices.models.get_payment_reminder_mail_content_response_data.get_payment_reminder_mail_content_response_data(
                    bcc_mails = [
                        ''
                        ], 
                    gateways_configured = True, 
                    gateways_associated = True, 
                    bcc_mails_str = '', 
                    body = '<br>Dear Mr. Sujin,&nbsp;<br><br>You might have missed the payment date and the invoice is now overdue by&nbsp;1&nbsp;days.<br><br>----------------------------------------------------------------------------------------<br><h2>Invoice# : INV-000004 </h2>Dated : 23 Dec 2016<br>----------------------------------------------------------------------------------------<br><b>&nbsp;Due Date &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;23 Dec 2016</b><br><b>&nbsp;Amount &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;$139.65</b><br>----------------------------------------------------------------------------------------<br><br><span>Not to worry at all !&nbsp;</span>View your invoice and take the easy way out by making an&nbsp;<a href="https://invoice.zoho.com/portal/zilliuminc/index#/invoices/invoice/2000000007037 ">online payment</a>.<br><br>If you have already paid, please accept our apologies and kindly ignore this payment reminder.<br><br><br>Regards,<br><br>David Sujin<br>Zillium Inc<br><br><br>', 
                    documents = [
                        ls_zoho_billing_invoices.models.documents_inner.documents_inner(
                            file_name = Rental Agreement.pdf, 
                            file_type = pdf, 
                            file_size = 5447, 
                            file_size_formatted = 5.3 KB, 
                            document_id = 903000005689, 
                            attachment_order = 1, )
                        ], 
                    customer_name = 'Bowman Furniture', 
                    attach_pdf = True, 
                    entity_id = '2000000007037', 
                    cc_mails_list = [
                        ls_zoho_billing_invoices.models.get_invoice_email_content_response_data_cc_mails_list_inner.get_invoice_email_content_response_data_cc_mails_list_inner(
                            user_name = 'David Sujin', 
                            email = 'benjamin.george@bowmanfurniture.com', )
                        ], 
                    file_name_without_extension = 'INV-000004', 
                    to_mails_str = '', 
                    cc_mails_str = '', 
                    from_email = '', 
                    from_address = '', 
                    deprecated_placeholders_used = [], 
                    error_list = [], 
                    subject = 'Invoice for the subscription.', 
                    emailtemplates = [
                        ls_zoho_billing_invoices.models.get_payment_reminder_mail_content_response_data_emailtemplates_inner.get_payment_reminder_mail_content_response_data_emailtemplates_inner(
                            selected = True, 
                            name = 'Default', 
                            email_template_id = '982000000000067', )
                        ], 
                    emailtemplate_documents = [
                        ''
                        ], 
                    to_contacts = [
                        ls_zoho_billing_invoices.models.get_invoice_email_content_response_data_to_contacts_inner.get_invoice_email_content_response_data_to_contacts_inner(
                            first_name = 'David', 
                            selected = True, 
                            phone = '+1-925-921-9201', 
                            last_name = 'Sujin', 
                            salutation = 'Mr', 
                            contact_person_id = '982000000567003', 
                            mobile = '+1-4054439562', )
                        ], 
                    attachment_name = ' ', 
                    file_name = Rental Agreement.pdf, 
                    from_emails = [
                        ls_zoho_billing_invoices.models.get_invoice_email_content_response_data_from_emails_inner.get_invoice_email_content_response_data_from_emails_inner(
                            organization_contact_id = '2000000002266', 
                            is_org_email_id = True, )
                        ], 
                    customer_id = '903000000000099', )
            )
        else:
            return GetPaymentReminderMailContentResponse(
        )
        """

    def testGetPaymentReminderMailContentResponse(self):
        """Test GetPaymentReminderMailContentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
