# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice import RetrieveAnInvoiceResponseInvoice

class TestRetrieveAnInvoiceResponseInvoice(unittest.TestCase):
    """RetrieveAnInvoiceResponseInvoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RetrieveAnInvoiceResponseInvoice:
        """Test RetrieveAnInvoiceResponseInvoice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RetrieveAnInvoiceResponseInvoice`
        """
        model = RetrieveAnInvoiceResponseInvoice()
        if include_optional:
            return RetrieveAnInvoiceResponseInvoice(
                invoice_id = '903000000079426',
                number = 'INV-384',
                status = 'paid',
                invoice_date = '2016-06-05',
                due_date = '2016-06-05',
                payment_expected_date = '10-05-2013',
                ach_payment_initiated = True,
                transaction_type = 'renewal',
                customer_id = '903000000000099',
                customer_name = 'Bowman Furniture',
                email = 'benjamin.george@bowmanfurniture.com',
                invoice_items = [
                    ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_invoice_items_inner.retrieve_an_invoice_response_invoice_invoice_items_inner(
                        item_id = '7000000079434', 
                        product_id = '7000000079973', 
                        name = 'Basic', 
                        description = Charges for this duration (from 16-April-2016 to 8-June-2016), 
                        code = 'basic-monthly', 
                        tags = [
                            ls_zoho_billing_invoices.models.tags_inner.tags_inner(
                                tag_id = 56, 
                                tag_option_id = 56, )
                            ], 
                        item_custom_fields = [
                            ls_zoho_billing_invoices.models.item_custom_fields_inner.item_custom_fields_inner(
                                label = '', 
                                value = '', )
                            ], 
                        price = '50', 
                        quantity = 1, 
                        discount_amount = 80, 
                        item_total = 400, 
                        tax_id = '903002205046032', 
                        tax_exemption_id = '903002205042099', 
                        tax_exemption_code = 'NGO', )
                    ],
                coupons = [
                    ls_zoho_billing_invoices.models.coupons_inner.coupons_inner(
                        coupon_code = 'THANKSGIVING20', 
                        coupon_name = 'Flat 10', 
                        discount_amount = 80, )
                    ],
                credits = [
                    ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_credits_inner.retrieve_an_invoice_response_invoice_credits_inner(
                        creditnote_id = '9030000079876', 
                        creditnotes_number = 'CN-26', 
                        credited_date = '2016-06-15', 
                        credited_amount = '15', )
                    ],
                total = 370,
                payment_made = 370,
                balance = 0,
                credits_applied = 0,
                write_off_amount = 0,
                payments = [
                    ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_payments_inner.retrieve_an_invoice_response_invoice_payments_inner(
                        payment_id = '90300000079467', 
                        payment_mode = 'autotransaction', 
                        invoice_payment_id = '90300000079469', 
                        amount_refunded = 50, 
                        gateway_transaction_id = 'B10E6E0F31BD', 
                        description = 'Payment has been made for the invoice INV-384', 
                        date = '2016-06-05', 
                        reference_number = 'INV-384', 
                        amount = 370, 
                        bank_charges = 10, 
                        exchange_rate = 1, 
                        autotransaction = ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_payments_inner_autotransaction.retrieve_an_invoice_response_invoice_payments_inner_autotransaction(
                            autotransaction_id = '9030000079465', 
                            payment_gateway = 'payflow_pro', 
                            gateway_transaction_id = 'B10E6E0F31BD', 
                            gateway_error_message = 'Gateway error message for a failed transaction.', 
                            account_id = '9030000000000361', ), )
                    ],
                currency_code = 'USD',
                currency_symbol = '$',
                created_time = '2016-06-05T02:15:15-0700',
                updated_time = '2016-06-05T02:15:15-0700',
                salesperson_id = '90300023000043',
                salesperson_name = 'Bowman',
                invoice_url = '',
                billing_address = ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_billing_address.retrieve_an_invoice_response_invoice_billing_address(
                    city = 'Salt Lake City', 
                    state = 'CA', 
                    zip = '92612', 
                    country = 'U.S.A', 
                    fax = '4527389', ),
                shipping_address = ls_zoho_billing_invoices.models.shipping_address.shipping_address(
                    street = 'Harrington Bay Street', 
                    city = 'Salt Lake City', 
                    state = 'CA', 
                    zip = '92612', 
                    country = 'U.S.A', 
                    fax = '4527389', ),
                comments = [
                    ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_comments_inner.retrieve_an_invoice_response_invoice_comments_inner(
                        comment_id = '9030000003133', 
                        description = Invoice has been marked as void, 
                        commented_by_id = '90300000002099', 
                        commented_by = 'Zoho Billinh', 
                        comment_type = 'system', 
                        date = null, 
                        time = '2:50 AM', 
                        operation_type = 'Added', 
                        transaction_id = '903000001223', 
                        transaction_type = invoice, )
                    ],
                custom_fields = [
                    ls_zoho_billing_invoices.models.retrieve_an_invoice_response_invoice_custom_fields_inner.retrieve_an_invoice_response_invoice_custom_fields_inner(
                        index = 1, 
                        label = '', 
                        value = '', 
                        data_type = 'text', )
                    ],
                can_send_in_mail = true,
                documents = [
                    ls_zoho_billing_invoices.models.documents_inner.documents_inner(
                        file_name = Rental Agreement.pdf, 
                        file_type = pdf, 
                        file_size = 5447, 
                        file_size_formatted = 5.3 KB, 
                        document_id = 903000005689, 
                        attachment_order = 1, )
                    ]
            )
        else:
            return RetrieveAnInvoiceResponseInvoice(
        )
        """

    def testRetrieveAnInvoiceResponseInvoice(self):
        """Test RetrieveAnInvoiceResponseInvoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
