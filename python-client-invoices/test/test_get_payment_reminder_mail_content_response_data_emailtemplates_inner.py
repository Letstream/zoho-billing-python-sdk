# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.get_payment_reminder_mail_content_response_data_emailtemplates_inner import GetPaymentReminderMailContentResponseDataEmailtemplatesInner

class TestGetPaymentReminderMailContentResponseDataEmailtemplatesInner(unittest.TestCase):
    """GetPaymentReminderMailContentResponseDataEmailtemplatesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPaymentReminderMailContentResponseDataEmailtemplatesInner:
        """Test GetPaymentReminderMailContentResponseDataEmailtemplatesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPaymentReminderMailContentResponseDataEmailtemplatesInner`
        """
        model = GetPaymentReminderMailContentResponseDataEmailtemplatesInner()
        if include_optional:
            return GetPaymentReminderMailContentResponseDataEmailtemplatesInner(
                selected = True,
                name = 'Default',
                email_template_id = '982000000000067'
            )
        else:
            return GetPaymentReminderMailContentResponseDataEmailtemplatesInner(
        )
        """

    def testGetPaymentReminderMailContentResponseDataEmailtemplatesInner(self):
        """Test GetPaymentReminderMailContentResponseDataEmailtemplatesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
