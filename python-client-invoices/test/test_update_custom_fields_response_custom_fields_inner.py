# coding: utf-8

"""
    Invoices

    Invoices describe how much a customer owes for his subscription. Invoices are created for recurring charges, one time charges including any prorated adjustments.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_invoices.models.update_custom_fields_response_custom_fields_inner import UpdateCustomFieldsResponseCustomFieldsInner

class TestUpdateCustomFieldsResponseCustomFieldsInner(unittest.TestCase):
    """UpdateCustomFieldsResponseCustomFieldsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateCustomFieldsResponseCustomFieldsInner:
        """Test UpdateCustomFieldsResponseCustomFieldsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateCustomFieldsResponseCustomFieldsInner`
        """
        model = UpdateCustomFieldsResponseCustomFieldsInner()
        if include_optional:
            return UpdateCustomFieldsResponseCustomFieldsInner(
                customfield_id = 2000000029001,
                show_in_store = False,
                is_active = True,
                index = 1,
                show_in_hp = False,
                is_mandatory = True,
                label = 'Test_field',
                is_custom_field = True,
                is_mandatory_in_sales_item = False,
                is_mandatory_in_hp = False,
                edit_on_store = False,
                show_in_all_pdf = True,
                search_entity = 'invoice',
                data_type = 'string',
                pii_type = 'non_pii',
                placeholder = 'cf_test_field',
                is_inherited_value = False,
                value = 'Test_value',
                is_dependent_field = False,
                max_length = 255,
                help_text = ''
            )
        else:
            return UpdateCustomFieldsResponseCustomFieldsInner(
        )
        """

    def testUpdateCustomFieldsResponseCustomFieldsInner(self):
        """Test UpdateCustomFieldsResponseCustomFieldsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
