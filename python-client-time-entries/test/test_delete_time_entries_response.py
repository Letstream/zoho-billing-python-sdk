# coding: utf-8

"""
    Time Entries

    Time entries are various entries of time made by users in a project, based on the time they spent on a project, in a task.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>This task does not exist in this project. Hence, this timesheet entry cannot be made</td></tr><tr><td><span style=\"color:#FF0000;\"> 20050</span></td><td>This timesheet entry is already being timed</td></tr><tr><td><span style=\"color:#FF0000;\"> 20054</span></td><td>This timesheet is being timed. Hence, it cannot be edited</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_time_entries.models.delete_time_entries_response import DeleteTimeEntriesResponse

class TestDeleteTimeEntriesResponse(unittest.TestCase):
    """DeleteTimeEntriesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeleteTimeEntriesResponse:
        """Test DeleteTimeEntriesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeleteTimeEntriesResponse`
        """
        model = DeleteTimeEntriesResponse()
        if include_optional:
            return DeleteTimeEntriesResponse(
                code = 0,
                message = 'The selected timesheet entries have been deleted'
            )
        else:
            return DeleteTimeEntriesResponse(
        )
        """

    def testDeleteTimeEntriesResponse(self):
        """Test DeleteTimeEntriesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
