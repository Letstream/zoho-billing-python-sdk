# coding: utf-8

"""
    Addons

    An addon contains additional features that are not part of the subscribed plan, but are made available to customers on purchase of the addon. There are two kinds of addons - one-time and recurring. For a one-time addon, customers pay only once at the time of subscription, whereas for a recurring addon, customers have to pay for the addon each time they pay for the planâ€™s subscription. An addon can be associated with one or more plans of a product.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.addons_api import AddonsApi


class TestAddonsApi(unittest.TestCase):
    """AddonsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AddonsApi()

    def tearDown(self) -> None:
        pass

    def test_addons_addon_code_delete(self) -> None:
        """Test case for addons_addon_code_delete

        Delete an addon
        """
        pass

    def test_addons_addon_code_get(self) -> None:
        """Test case for addons_addon_code_get

        Retrieve an addon
        """
        pass

    def test_addons_addon_code_markasactive_post(self) -> None:
        """Test case for addons_addon_code_markasactive_post

        Mark as active
        """
        pass

    def test_addons_addon_code_markasinactive_post(self) -> None:
        """Test case for addons_addon_code_markasinactive_post

        Mark as inactive
        """
        pass

    def test_addons_addon_code_put(self) -> None:
        """Test case for addons_addon_code_put

        Update an addon
        """
        pass

    def test_addons_get(self) -> None:
        """Test case for addons_get

        List all addons
        """
        pass

    def test_addons_post(self) -> None:
        """Test case for addons_post

        Create an addon
        """
        pass


if __name__ == '__main__':
    unittest.main()
