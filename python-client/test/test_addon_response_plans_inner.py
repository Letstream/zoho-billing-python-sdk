# coding: utf-8

"""
    Addons

    An addon contains additional features that are not part of the subscribed plan, but are made available to customers on purchase of the addon. There are two kinds of addons - one-time and recurring. For a one-time addon, customers pay only once at the time of subscription, whereas for a recurring addon, customers have to pay for the addon each time they pay for the planâ€™s subscription. An addon can be associated with one or more plans of a product.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.addon_response_plans_inner import AddonResponsePlansInner

class TestAddonResponsePlansInner(unittest.TestCase):
    """AddonResponsePlansInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonResponsePlansInner:
        """Test AddonResponsePlansInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonResponsePlansInner`
        """
        model = AddonResponsePlansInner()
        if include_optional:
            return AddonResponsePlansInner(
                plan_code = 'basic-monthly',
                name = Basic
            )
        else:
            return AddonResponsePlansInner(
        )
        """

    def testAddonResponsePlansInner(self):
        """Test AddonResponsePlansInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
