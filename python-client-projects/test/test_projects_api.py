# coding: utf-8

"""
    Projects

    A project is a series of tasks performed over a period of time, to achieve certain targets. There can be many number of people working on a single project and a project may consist of single or multiple tasks. A project is billed and charged upon a customer whom the project was taken up for.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Project does not exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 20004</span></td><td>Please ensure that the amount is not negative</td></tr><tr><td><span style=\"color:#FF0000;\"> 20077</span></td><td>Expense has been recorded for this project. Hence, it cannot be deleted</td></tr></tbody></table></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_projects.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_projects_get(self) -> None:
        """Test case for projects_get

        List projects
        """
        pass

    def test_projects_post(self) -> None:
        """Test case for projects_post

        Create a project
        """
        pass

    def test_projects_project_id_active_post(self) -> None:
        """Test case for projects_project_id_active_post

        Activate a project
        """
        pass

    def test_projects_project_id_clone_post(self) -> None:
        """Test case for projects_project_id_clone_post

        Clone a project
        """
        pass

    def test_projects_project_id_comments_comment_id_delete(self) -> None:
        """Test case for projects_project_id_comments_comment_id_delete

        Delete comment
        """
        pass

    def test_projects_project_id_comments_get(self) -> None:
        """Test case for projects_project_id_comments_get

        List comments
        """
        pass

    def test_projects_project_id_comments_post(self) -> None:
        """Test case for projects_project_id_comments_post

        Post comment
        """
        pass

    def test_projects_project_id_delete(self) -> None:
        """Test case for projects_project_id_delete

        Delete project
        """
        pass

    def test_projects_project_id_get(self) -> None:
        """Test case for projects_project_id_get

        Get a project
        """
        pass

    def test_projects_project_id_inactive_post(self) -> None:
        """Test case for projects_project_id_inactive_post

        Deactivate a project
        """
        pass

    def test_projects_project_id_invoices_get(self) -> None:
        """Test case for projects_project_id_invoices_get

        List invoices
        """
        pass

    def test_projects_project_id_put(self) -> None:
        """Test case for projects_project_id_put

        Update a project
        """
        pass

    def test_projects_project_id_users_get(self) -> None:
        """Test case for projects_project_id_users_get

        List Users
        """
        pass

    def test_projects_project_id_users_invite_post(self) -> None:
        """Test case for projects_project_id_users_invite_post

        Invite user
        """
        pass

    def test_projects_project_id_users_post(self) -> None:
        """Test case for projects_project_id_users_post

        Assign users
        """
        pass

    def test_projects_project_id_users_user_id_delete(self) -> None:
        """Test case for projects_project_id_users_user_id_delete

        Delete user
        """
        pass

    def test_projects_project_id_users_user_id_get(self) -> None:
        """Test case for projects_project_id_users_user_id_get

        Get a User
        """
        pass

    def test_projects_project_id_users_user_id_put(self) -> None:
        """Test case for projects_project_id_users_user_id_put

        Update user
        """
        pass


if __name__ == '__main__':
    unittest.main()
