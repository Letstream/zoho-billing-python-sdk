# coding: utf-8

"""
    Projects

    A project is a series of tasks performed over a period of time, to achieve certain targets. There can be many number of people working on a single project and a project may consist of single or multiple tasks. A project is billed and charged upon a customer whom the project was taken up for.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Project does not exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 20004</span></td><td>Please ensure that the amount is not negative</td></tr><tr><td><span style=\"color:#FF0000;\"> 20077</span></td><td>Expense has been recorded for this project. Hence, it cannot be deleted</td></tr></tbody></table></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_projects.models.clone_a_project_request import CloneAProjectRequest

class TestCloneAProjectRequest(unittest.TestCase):
    """CloneAProjectRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloneAProjectRequest:
        """Test CloneAProjectRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloneAProjectRequest`
        """
        model = CloneAProjectRequest()
        if include_optional:
            return CloneAProjectRequest(
                project_name = 'Network Distribution',
                description = 'Distribution for the system of intermediaries between the producer of goods and/or services and the final user'
            )
        else:
            return CloneAProjectRequest(
                project_name = 'Network Distribution',
        )
        """

    def testCloneAProjectRequest(self):
        """Test CloneAProjectRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
