# coding: utf-8

"""
    Projects

    A project is a series of tasks performed over a period of time, to achieve certain targets. There can be many number of people working on a single project and a project may consist of single or multiple tasks. A project is billed and charged upon a customer whom the project was taken up for.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Project does not exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 20004</span></td><td>Please ensure that the amount is not negative</td></tr><tr><td><span style=\"color:#FF0000;\"> 20077</span></td><td>Expense has been recorded for this project. Hence, it cannot be deleted</td></tr></tbody></table></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_projects.models.post_comment_response import PostCommentResponse

class TestPostCommentResponse(unittest.TestCase):
    """PostCommentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostCommentResponse:
        """Test PostCommentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostCommentResponse`
        """
        model = PostCommentResponse()
        if include_optional:
            return PostCommentResponse(
                code = 0,
                message = 'Comments added.',
                comments = [
                    ls_zoho_billing_projects.models.post_comment_response_comments_inner.post_comment_response_comments_inner(
                        project_id = '460000000044019', 
                        comment_id = '460000000044027', 
                        description = 'A simple algorithm is to be tested with vehicle detection application.', 
                        commented_by_id = '460000000024003', 
                        commented_by = 'John David', 
                        date = '2013-11-18', 
                        date_description = '19 days ago', 
                        time = '6:52 PM', )
                    ]
            )
        else:
            return PostCommentResponse(
        )
        """

    def testPostCommentResponse(self):
        """Test PostCommentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
