# coding: utf-8

"""
    Projects

    A project is a series of tasks performed over a period of time, to achieve certain targets. There can be many number of people working on a single project and a project may consist of single or multiple tasks. A project is billed and charged upon a customer whom the project was taken up for.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Project does not exists</td></tr><tr><td><span style=\"color:#FF0000;\"> 20004</span></td><td>Please ensure that the amount is not negative</td></tr><tr><td><span style=\"color:#FF0000;\"> 20077</span></td><td>Expense has been recorded for this project. Hence, it cannot be deleted</td></tr></tbody></table></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_projects.models.create_a_project_response import CreateAProjectResponse

class TestCreateAProjectResponse(unittest.TestCase):
    """CreateAProjectResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAProjectResponse:
        """Test CreateAProjectResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAProjectResponse`
        """
        model = CreateAProjectResponse()
        if include_optional:
            return CreateAProjectResponse(
                code = 0,
                message = 'The project has been created.',
                project = ls_zoho_billing_projects.models.project_response.project-response(
                    project_id = '460000000044019', 
                    project_name = 'REAL TIME TRAFFIC FLUX', 
                    customer_id = '460000000044001', 
                    customer_name = 'SAF Instruments Inc', 
                    currency_code = 'USD', 
                    description = 'A simple algorithm is to be tested with vehicle detection application.', 
                    status = 'active', 
                    billing_type = 'fixed_cost_for_project', 
                    rate = 5000, 
                    budget_type = ' ', 
                    total_hours = '12:26', 
                    total_amount = 500, 
                    billed_hours = '12:27', 
                    billed_amount = 500, 
                    un_billed_hours = '00:00', 
                    un_billed_amount = 0, 
                    billable_hours = '12:26', 
                    billable_amount = 500, 
                    non_billable_hours = '0.00', 
                    non_billable_amount = 0, 
                    created_time = '2013-11-18T18:05:27+0530', 
                    show_in_dashboard = True, 
                    tasks = [
                        ls_zoho_billing_projects.models.project_response_tasks_inner.project_response_tasks_inner(
                            task_id = '460000000044009', 
                            task_name = 'Distribution Analysis', 
                            description = 'A simple algorithm is to be tested with vehicle detection application.', 
                            rate = 5000, 
                            budget_hours = '0', 
                            total_hours = '12:26', 
                            billed_hours = '12:27', 
                            un_billed_hours = '00:00', 
                            non_billable_hours = '0.00', 
                            status = 'active', 
                            is_billable = True, 
                            task_custom_fields = '', )
                        ], 
                    users = [
                        ls_zoho_billing_projects.models.project_response_users_inner.project_response_users_inner(
                            user_id = '460000000024003', 
                            is_current_user = True, 
                            user_name = 'John David', 
                            email = 'test@zylker.org', 
                            user_role = 'admin', )
                        ], )
            )
        else:
            return CreateAProjectResponse(
        )
        """

    def testCreateAProjectResponse(self):
        """Test CreateAProjectResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
