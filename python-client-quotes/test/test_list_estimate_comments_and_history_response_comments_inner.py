# coding: utf-8

"""
    Quotes

    A quote is an approximation, of the prices, which a seller projects to a buyer. There can be different quotes to different buyers.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1001</span></td><td>Quote Number already exist</td></tr><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Quote does not exist</td></tr><td><span style=\"color:#FF0000;\"> 2007</span></td><td>Quote cannot be raised for items that have been deleted or marked as inactive</td></tr><tr><td><span style=\"color:#FF0000;\"> 4041</span></td><td>Quote status cannot be changed to Draft</td></tr><tr><td><span style=\"color:#FF0000;\"> 9526</span></td><td>Please enter a valid retainer percentage. It should be greater than 0 and less than or equal to 100</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_quotes.models.list_estimate_comments_and_history_response_comments_inner import ListEstimateCommentsAndHistoryResponseCommentsInner

class TestListEstimateCommentsAndHistoryResponseCommentsInner(unittest.TestCase):
    """ListEstimateCommentsAndHistoryResponseCommentsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEstimateCommentsAndHistoryResponseCommentsInner:
        """Test ListEstimateCommentsAndHistoryResponseCommentsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEstimateCommentsAndHistoryResponseCommentsInner`
        """
        model = ListEstimateCommentsAndHistoryResponseCommentsInner()
        if include_optional:
            return ListEstimateCommentsAndHistoryResponseCommentsInner(
                comment_id = '982000000567019',
                estimate_id = '982000000567011',
                description = 'Estimate created',
                commented_by_id = '982000000554041',
                commented_by = 'David Sujin',
                comment_type = 'system',
                var_date = '2013-11-18',
                date_description = 'yesterday',
                time = '2:02 AM',
                operation_type = 'Added',
                transaction_id = ' ',
                transaction_type = 'estimate'
            )
        else:
            return ListEstimateCommentsAndHistoryResponseCommentsInner(
        )
        """

    def testListEstimateCommentsAndHistoryResponseCommentsInner(self):
        """Test ListEstimateCommentsAndHistoryResponseCommentsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
