# coding: utf-8

"""
    Quotes

    A quote is an approximation, of the prices, which a seller projects to a buyer. There can be different quotes to different buyers.<br><br><b>Possible error codes: </b><br><table><thead><tr><th>Error Code</th><th>Message</th></tr></thead><tbody><tr><td><span style=\"color:#FF0000;\"> 1001</span></td><td>Quote Number already exist</td></tr><tr><td><span style=\"color:#FF0000;\"> 1002</span></td><td>Quote does not exist</td></tr><td><span style=\"color:#FF0000;\"> 2007</span></td><td>Quote cannot be raised for items that have been deleted or marked as inactive</td></tr><tr><td><span style=\"color:#FF0000;\"> 4041</span></td><td>Quote status cannot be changed to Draft</td></tr><tr><td><span style=\"color:#FF0000;\"> 9526</span></td><td>Please enter a valid retainer percentage. It should be greater than 0 and less than or equal to 100</td></tr></tbody></table>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_quotes.models.list_estimates_response import ListEstimatesResponse

class TestListEstimatesResponse(unittest.TestCase):
    """ListEstimatesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEstimatesResponse:
        """Test ListEstimatesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEstimatesResponse`
        """
        model = ListEstimatesResponse()
        if include_optional:
            return ListEstimatesResponse(
                code = 0,
                message = 'success',
                estimates = [
                    ls_zoho_billing_quotes.models.list_estimates_response_estimates_inner.list_estimates_response_estimates_inner(
                        estimate_id = '982000000567011', 
                        customer_name = 'Bowman & Co', 
                        customer_id = '982000000567001', 
                        status = 'draft', 
                        estimate_number = 'EST-00002', 
                        reference_number = 'QRT-12346', 
                        date = '2013-11-18', 
                        currency_id = '982000000000190', 
                        currency_code = 'USD', 
                        total = 40.6, 
                        created_time = '2013-11-18T02:17:40-0800', 
                        last_modified_time = '2013-12-18T04:46:45-0500', 
                        accepted_date = ' ', 
                        declined_date = ' ', 
                        expiry_date = '2013-11-30', 
                        has_attachment = False, 
                        is_viewed_by_client = True, 
                        client_viewed_time = '2016-06-19T05:49:12-0500', )
                    ]
            )
        else:
            return ListEstimatesResponse(
        )
        """

    def testListEstimatesResponse(self):
        """Test ListEstimatesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
