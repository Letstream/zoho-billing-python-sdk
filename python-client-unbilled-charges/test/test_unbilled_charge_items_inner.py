# coding: utf-8

"""
    Unbilled-Charges

    These are charges to be converted into an invoice at a later point of time, either by manual intervention or during renewal.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_unbilled_charges.models.unbilled_charge_items_inner import UnbilledChargeItemsInner

class TestUnbilledChargeItemsInner(unittest.TestCase):
    """UnbilledChargeItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnbilledChargeItemsInner:
        """Test UnbilledChargeItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnbilledChargeItemsInner`
        """
        model = UnbilledChargeItemsInner()
        if include_optional:
            return UnbilledChargeItemsInner(
                unbilled_charge_item_id = '90300000079201',
                product_id = '7000000079434',
                name = 'Basic',
                description = Usage charges for last month,
                code = 'basic-monthly',
                price = '50',
                quantity = 1,
                discount_amount = 80,
                item_total = 400,
                tax_id = 90300000079226,
                product_type = 'goods',
                hsn_or_sac = '74191010',
                tax_exemption_id = 90300000079226,
                tax_exemption_code = 'NGO'
            )
        else:
            return UnbilledChargeItemsInner(
        )
        """

    def testUnbilledChargeItemsInner(self):
        """Test UnbilledChargeItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
