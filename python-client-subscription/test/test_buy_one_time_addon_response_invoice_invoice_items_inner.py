# coding: utf-8

"""
    Subscriptions

    A subscription enables you to charge customers at specified intervals for a plan of their choice.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_subscription.models.buy_one_time_addon_response_invoice_invoice_items_inner import BuyOneTimeAddonResponseInvoiceInvoiceItemsInner

class TestBuyOneTimeAddonResponseInvoiceInvoiceItemsInner(unittest.TestCase):
    """BuyOneTimeAddonResponseInvoiceInvoiceItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuyOneTimeAddonResponseInvoiceInvoiceItemsInner:
        """Test BuyOneTimeAddonResponseInvoiceInvoiceItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuyOneTimeAddonResponseInvoiceInvoiceItemsInner`
        """
        model = BuyOneTimeAddonResponseInvoiceInvoiceItemsInner()
        if include_optional:
            return BuyOneTimeAddonResponseInvoiceInvoiceItemsInner(
                item_id = '90300000079434',
                name = 'GatorHost-Basic',
                description = One time addon purchased,
                code = 'basic-monthly',
                price = 50,
                quantity = 1,
                tags = [
                    ls_zoho_billing_subscription.models.tags_inner.tags_inner(
                        tag_id = 56, 
                        tag_option_id = 56, )
                    ],
                item_custom_fields = [
                    ls_zoho_billing_subscription.models.item_custom_fields_inner.item_custom_fields_inner(
                        label = '', 
                        value = '', )
                    ],
                discount_amount = 44,
                item_total = 50
            )
        else:
            return BuyOneTimeAddonResponseInvoiceInvoiceItemsInner(
        )
        """

    def testBuyOneTimeAddonResponseInvoiceInvoiceItemsInner(self):
        """Test BuyOneTimeAddonResponseInvoiceInvoiceItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
