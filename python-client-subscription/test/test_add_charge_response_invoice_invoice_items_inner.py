# coding: utf-8

"""
    Subscriptions

    A subscription enables you to charge customers at specified intervals for a plan of their choice.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_subscription.models.add_charge_response_invoice_invoice_items_inner import AddChargeResponseInvoiceInvoiceItemsInner

class TestAddChargeResponseInvoiceInvoiceItemsInner(unittest.TestCase):
    """AddChargeResponseInvoiceInvoiceItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddChargeResponseInvoiceInvoiceItemsInner:
        """Test AddChargeResponseInvoiceInvoiceItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddChargeResponseInvoiceInvoiceItemsInner`
        """
        model = AddChargeResponseInvoiceInvoiceItemsInner()
        if include_optional:
            return AddChargeResponseInvoiceInvoiceItemsInner(
                item_id = '90300000079434',
                name = One-time charge,
                description = Charges for Additional usage,
                code = 'basic-monthly',
                price = 50,
                quantity = 1,
                tags = [
                    ls_zoho_billing_subscription.models.tags_inner.tags_inner(
                        tag_id = 56, 
                        tag_option_id = 56, )
                    ],
                item_custom_fields = [
                    ls_zoho_billing_subscription.models.item_custom_fields_inner.item_custom_fields_inner(
                        label = '', 
                        value = '', )
                    ],
                item_total = 50,
                account_id = '90300000791111',
                account_name = 'General Income'
            )
        else:
            return AddChargeResponseInvoiceInvoiceItemsInner(
        )
        """

    def testAddChargeResponseInvoiceInvoiceItemsInner(self):
        """Test AddChargeResponseInvoiceInvoiceItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
