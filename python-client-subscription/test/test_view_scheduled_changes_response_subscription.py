# coding: utf-8

"""
    Subscriptions

    A subscription enables you to charge customers at specified intervals for a plan of their choice.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_subscription.models.view_scheduled_changes_response_subscription import ViewScheduledChangesResponseSubscription

class TestViewScheduledChangesResponseSubscription(unittest.TestCase):
    """ViewScheduledChangesResponseSubscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ViewScheduledChangesResponseSubscription:
        """Test ViewScheduledChangesResponseSubscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ViewScheduledChangesResponseSubscription`
        """
        model = ViewScheduledChangesResponseSubscription()
        if include_optional:
            return ViewScheduledChangesResponseSubscription(
                subscription_id = '90300000079200',
                name = 'GatorHost-Basic',
                status = 'live',
                amount = 50,
                created_at = '2016-06-11',
                activated_at = '2016-06-15',
                current_term_ends_at = '2016-06-05',
                current_term_starts_at = '2016-06-05',
                last_billing_at = '2016-06-05',
                next_billing_at = '2016-06-30',
                expires_at = '2016-06-05',
                interval = '1',
                interval_unit = 'months',
                auto_collect = True,
                created_time = '2016-06-11T17:57:13-0700',
                updated_time = '2016-06-04T16:44:15-0700',
                reference_id = 'bowmanfurniture',
                salesperson_id = '903000000058001',
                salesperson_name = 'Franklin',
                currency_code = 'USD',
                currency_symbol = '$',
                product_id = '90300000079065',
                plan = ls_zoho_billing_subscription.models.cancel_a_subscription_response_subscription_plan.cancel_a_subscription_response_subscription_plan(
                    plan_code = 'basic-monthly', 
                    name = 'GatorHost-Basic', 
                    quantity = 1, 
                    price = 50, 
                    discount = 20, 
                    total = 50, 
                    setup_fee = 20, 
                    plan_description = 'Monthly Basic plan', 
                    tax_id = '903000002345', 
                    trial_days = 0, ),
                addons = [
                    ls_zoho_billing_subscription.models.cancel_a_subscription_response_subscription_addons_inner.cancel_a_subscription_response_subscription_addons_inner(
                        addon_code = 'Email-basic', 
                        name = Monthly Addon, 
                        addon_description = 'Monthly addon.', 
                        quantity = 1, 
                        price = 10, 
                        discount = null, 
                        total = null, 
                        tax_id = null, )
                    ],
                taxes = [
                    ls_zoho_billing_subscription.models.subscription_response_taxes_inner.subscription_response_taxes_inner(
                        tax_id = '903000002345', 
                        tax_name = 'GST', 
                        tax_amount = '2.50', )
                    ],
                coupon = ls_zoho_billing_subscription.models.coupon.coupon(
                    coupon_code = 'Flat10', 
                    discount_amount = 44, ),
                tax_id = '903000002345'
            )
        else:
            return ViewScheduledChangesResponseSubscription(
        )
        """

    def testViewScheduledChangesResponseSubscription(self):
        """Test ViewScheduledChangesResponseSubscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
