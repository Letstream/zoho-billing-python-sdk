# coding: utf-8

"""
    Settings

    Tax Settings Related APIs.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ls_zoho_billing_settings.models.retrieve_churn_message_preferences_response_churn_messages_settings import RetrieveChurnMessagePreferencesResponseChurnMessagesSettings

class TestRetrieveChurnMessagePreferencesResponseChurnMessagesSettings(unittest.TestCase):
    """RetrieveChurnMessagePreferencesResponseChurnMessagesSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RetrieveChurnMessagePreferencesResponseChurnMessagesSettings:
        """Test RetrieveChurnMessagePreferencesResponseChurnMessagesSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RetrieveChurnMessagePreferencesResponseChurnMessagesSettings`
        """
        model = RetrieveChurnMessagePreferencesResponseChurnMessagesSettings()
        if include_optional:
            return RetrieveChurnMessagePreferencesResponseChurnMessagesSettings(
                is_advanced_version = 'true',
                is_reason_mandatory = 'true',
                churn_messages = [
                    ls_zoho_billing_settings.models.churn_messages_inner.churn_messages_inner(
                        label = 'Doesn't meet my needs', 
                        index = '0', 
                        churn_message_id = 'customer', )
                    ]
            )
        else:
            return RetrieveChurnMessagePreferencesResponseChurnMessagesSettings(
        )
        """

    def testRetrieveChurnMessagePreferencesResponseChurnMessagesSettings(self):
        """Test RetrieveChurnMessagePreferencesResponseChurnMessagesSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
